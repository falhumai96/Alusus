/**
 * @file Srl/U32String.alusus
 * Contains the class Srl.U32String.
 *
 * @copyright Copyright (C) 2021 Sarmad Khalid Abdullah
 *
 * @license This file is released under Alusus Public License, Version 1.0.
 * For details on usage and copying conditions read the full license in the
 * accompanying license file or at <https://alusus.org/license.html>.
 */
//==============================================================================

import "String";

@merge module Srl
{
    def U32String: alias StringBase[Char];

    @merge class U32String {
        @expname[u32_strchr]
        func find(s: ptr[Word], c: Word): ptr[Word];

        @expname[u32_memchr]
        func find(s: ptr[Word], c: Word, n: ArchInt): ptr[Word];

        @expname[u32_strrchr]
        func findLast(s: ptr[Word], c: Word): ptr[Word];

        @expname[u32_strstr]
        func find(haystack: ptr[Word], needle: ptr[Word]): ptr[Word];

        @expname[u32_strcmp]
        func compare(s1: ptr[Word], s2: ptr[Word]): Int;

        @expname[u32_strncmp]
        func compare(s1: ptr[Word], s2: ptr[Word], n: ArchInt): Int;

        @expname[u32_strcpy]
        func copy(dest: ptr[Word], src: ptr[Word]): ptr[Word];

        @expname[u32_strncpy]
        func copy(dest: ptr[Word], src: ptr[Word], n: ArchInt): ptr[Word];

        @expname[u32_strcat]
        func concat(dest: ptr[Word], src: ptr[Word]): ptr[Word];

        @expname[u32_strncat]
        func concat(dest: ptr[Word], src: ptr[Word], n: ArchInt): ptr[Word];

        @expname[u32_strlen]
        func getLength(s: ptr[Word]): ArchInt;

        // @expname[sprintf]
        // func assign(target: ptr[Char], format: ptr[Char], args: ...any): Int[32];

        @expname[swscanf]
        func scan(source: ptr[Word], format: ptr[Word], args: ...any): Int[32];

        @expname[u32_towupper]
        func toUpper(c: Word): Word;

        @expname[u32_towlower]
        func toLower(c: Word): Word;
    };
};
